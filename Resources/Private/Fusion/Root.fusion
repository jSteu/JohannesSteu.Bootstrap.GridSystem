prototype(JohannesSteu.Bootstrap.GridSystem:Container) >
prototype(JohannesSteu.Bootstrap.GridSystem:Container) < prototype(Neos.Neos:Content) {
	templatePath = 'resource://JohannesSteu.Bootstrap.GridSystem/Private/Templates/NodeTypes/Container.html'

	attributes.class.@process.nodeType >
	attributes.class = ${q(node).property('layout') + " " + q(node).property('classes')}

	content = Neos.Neos:ContentCollection {
		nodePath = ${q(node).children('containerContent').property('_path')}
		collection = ${q(node).children('containerContent').children()}
	}
}

prototype(JohannesSteu.Bootstrap.GridSystem:GridRow) < prototype(Neos.Neos:Content) {
	templatePath = 'resource://JohannesSteu.Bootstrap.GridSystem/Private/Templates/NodeTypes/GridRow.html'

	classes = Neos.Fusion:Array {
		defaultClass = 'row'
		additionalClasses = ${q(node).property('classes') ? (' ' + q(node).property('classes')) : ''}
	}

	columns = Neos.Fusion:Collection {
		collection = ${q(node).children('[instanceof Neos.Neos:ContentCollection]')}
		itemRenderer = JohannesSteu.Bootstrap.GridSystem:GridColumn
		itemName = 'node'
		iterationName = 'iteration'
	}
}

prototype(JohannesSteu.Bootstrap.GridSystem:GridColumn) < prototype(Neos.Fusion:Template) {
	templatePath = 'resource://JohannesSteu.Bootstrap.GridSystem/Private/Templates/NodeTypes/GridColumn.html'

	node = ${node}
	layout = ${q(node).parent().property('layout')}
	iteration = ${iteration.cycle}

	columnContent = Neos.Neos:ContentCollection {
		nodePath = '.'
	}
}

prototype(JohannesSteu.Bootstrap.GridSystem:TwoColumn) >
prototype(JohannesSteu.Bootstrap.GridSystem:TwoColumn) < prototype(JohannesSteu.Bootstrap.GridSystem:GridRow)

prototype(JohannesSteu.Bootstrap.GridSystem:ThreeColumn) >
prototype(JohannesSteu.Bootstrap.GridSystem:ThreeColumn) < prototype(JohannesSteu.Bootstrap.GridSystem:GridRow)

prototype(JohannesSteu.Bootstrap.GridSystem:FourColumn) >
prototype(JohannesSteu.Bootstrap.GridSystem:FourColumn) < prototype(JohannesSteu.Bootstrap.GridSystem:GridRow)

prototype(JohannesSteu.Bootstrap.GridSystem:CustomRow) >
prototype(JohannesSteu.Bootstrap.GridSystem:CustomRow) < prototype(Neos.Neos:Content) {
	templatePath = 'resource://JohannesSteu.Bootstrap.GridSystem/Private/Templates/NodeTypes/CustomRow.html'

	attributes.class.@process.nodeType >

	classes = Neos.Fusion:Array {
		defaultClass = 'row'

		classes = ${q(node).property('classes') ? (' ' + q(node).property('classes')) : ''}
	}

	columns = Neos.Fusion:Collection {
		nodePath = ${q(node).children('columns').property('_path')}
		collection = ${q(node).children('columns').children('[instanceof JohannesSteu.Bootstrap.GridSystem:CustomColumn]')}
		itemName = 'node'
		itemRenderer = JohannesSteu.Bootstrap.GridSystem:CustomColumn
	}
}

prototype(JohannesSteu.Bootstrap.GridSystem:CustomColumn) >
prototype(JohannesSteu.Bootstrap.GridSystem:CustomColumn) < prototype(Neos.Neos:Content) {
	templatePath = 'resource://JohannesSteu.Bootstrap.GridSystem/Private/Templates/NodeTypes/CustomColumn.html'

	classes = Neos.Fusion:Array {
		class = 'col'

		sizeXS = ${q(node).property('sizeXS') ? (' ' + q(node).property('sizeXS')) : ''}
		sizeSM = ${q(node).property('sizeSM') ? (' ' + q(node).property('sizeSM')) : ''}
		sizeMD = ${q(node).property('sizeMD') ? (' ' + q(node).property('sizeMD')) : ''}
		sizeLG = ${q(node).property('sizeLG') ? (' ' + q(node).property('sizeLG')) : ''}

		visible = ${q(node).property('visible') != '' ? ' ' + Array.join(q(node).property('visible'), ' ') : ''}
		hidden  = ${q(node).property('hidden')  != '' ? ' ' + Array.join(q(node).property('hidden'),  ' ') : ''}

		offsetXS = ${q(node).property('offsetXS') ? (' ' + q(node).property('offsetXS')) : ''}
		offsetSM = ${q(node).property('offsetSM') ? (' ' + q(node).property('offsetSM')) : ''}
		offsetMD = ${q(node).property('offsetMD') ? (' ' + q(node).property('offsetMD')) : ''}
		offsetLG = ${q(node).property('offsetLG') ? (' ' + q(node).property('offsetLG')) : ''}

		pullXS = ${q(node).property('pullXS') ? (' ' + q(node).property('pullXS')) : ''}
		pullSM = ${q(node).property('pullSM') ? (' ' + q(node).property('pullSM')) : ''}
		pullMD = ${q(node).property('pullMD') ? (' ' + q(node).property('pullMD')) : ''}
		pullLG = ${q(node).property('pullLG') ? (' ' + q(node).property('pullLG')) : ''}

		pushXS = ${q(node).property('pushXS') ? (' ' + q(node).property('pushXS')) : ''}
		pushSM = ${q(node).property('pushSM') ? (' ' + q(node).property('pushSM')) : ''}
		pushMD = ${q(node).property('pushMD') ? (' ' + q(node).property('pushMD')) : ''}
		pushLG = ${q(node).property('pushLG') ? (' ' + q(node).property('pullLG')) : ''}
	}

	columnContent = Neos.Neos:ContentCollection {
		nodePath = ${q(node).children('column').property('_path')}
	}
}
